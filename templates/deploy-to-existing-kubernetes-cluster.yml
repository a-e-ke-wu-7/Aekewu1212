# Deploy to Azure Kubernetes Service (AKS)
# Build a Docker image, push to an Azure Container Registry, and deploy it to Azure Kubernetes Service.
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation - Docker Hub/ACR/...
  dockerRegistryServiceConnection: '{{ containerRegistryConnection.Id }}'
  imageRepository: '{{ imageRepository }}'
  containerRegistryName: '{{ containerRegistryName }}'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Kubernetes Namespace
  k8sNamespace: '{{ environment.Resources.kubernetesConnection.Namespace }}'
  imagePullSecret: '{{ containerRegistryConnection.Name }}-auth'

  # Agent Pool Name
  poolName: 'Hosted Ubuntu 1604'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool: $(poolName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool: $(poolName)
    environment: '{{ environment.Environment.Name }}.{{ environment.Resources.kubernetesConnection.Name }}'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespace)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: |
                manifests/*
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistryName)/$(imageRepository):$(tag)
